
// Sidebar toggle (mobile)
const sidebar = document.getElementById('sidebar');
document.getElementById('btnOpenSidebar')?.addEventListener('click', ()=> sidebar.classList.add('show'));
document.getElementById('btnCloseSidebar')?.addEventListener('click', ()=> sidebar.classList.remove('show'));

// Seed data (‡πÅ‡∏ó‡∏ô API ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß)
const patients = [
  {pet:'‡πÇ‡∏ö‡πÇ‡∏ö‡πâ üê∂', owner:'‡∏õ‡∏¥‡πà‡∏ô', service:'‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡∏£‡∏ß‡∏°', date:'2025-10-22', status:'‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'},
  {pet:'‡πÄ‡∏´‡∏°‡∏µ‡∏¢‡∏ß‡∏à‡∏±‡∏á üê±', owner:'‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ò', service:'‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏±‡∏î‡∏Ç‡∏ô', date:'2025-10-22', status:'‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'},
  {pet:'‡∏ä‡∏¥‡∏Å‡∏Å‡∏µ‡πâ üêî', owner:'‡∏à‡∏π‡∏ô', service:'‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', date:'2025-10-22', status:'‡∏£‡∏≠‡∏Ñ‡∏¥‡∏ß'},
  {pet:'‡πÅ‡∏ö‡∏°‡∏ö‡∏π üê∞', owner:'‡πÄ‡∏õ‡∏£‡∏°', service:'‡∏ó‡∏≥‡∏´‡∏°‡∏±‡∏ô', date:'2025-10-21', status:'‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß'},
  {pet:'‡∏õ‡∏∏‡∏Å‡∏õ‡∏∏‡∏¢ üêπ', owner:'‡πÅ‡∏à‡∏ô', service:'‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡∏û‡∏¥‡∏©‡∏™‡∏∏‡∏ô‡∏±‡∏Ç‡∏ö‡πâ‡∏≤', date:'2025-10-21', status:'‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'},
  {pet:'‡∏Ñ‡∏∏‡∏°‡∏∞ üêª', owner:'‡∏ö‡∏≠‡∏°', service:'‡πÄ‡∏≠‡πá‡∏Å‡∏ã‡πÄ‡∏£‡∏¢‡πå', date:'2025-10-21', status:'‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'},
];

function statusBadge(s){
  const map = {
    '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô':'success',
    '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£':'primary',
    '‡∏£‡∏≠‡∏Ñ‡∏¥‡∏ß':'secondary',
    '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß':'warning',
    '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å':'danger'
  };
  const cls = map[s] || 'secondary';
  return `<span class="badge text-bg-${cls}">${s}</span>`;
}

function renderTable(){
  const tbody = document.querySelector('#tblPatients tbody');
  tbody.innerHTML = patients.map(p => `
    <tr>
      <td>${p.pet}</td>
      <td>${p.owner}</td>
      <td>${p.service}</td>
      <td>${p.date}</td>
      <td>${statusBadge(p.status)}</td>
      <td class="text-end">
        <button class="btn btn-sm btn-outline-secondary me-1"><i class="bi bi-eye"></i></button>
        <button class="btn btn-sm btn-outline-primary me-1"><i class="bi bi-pencil"></i></button>
        <button class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>
      </td>
    </tr>
  `).join('');
}
renderTable();

// Chart ‚Äî‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡πÄ‡∏™‡πâ‡∏ô 7 ‡∏ß‡∏±‡∏ô)
const ctx = document.getElementById('todayChart');
if (ctx){
  const data = [12, 18, 22, 15, 30, 27, 38];
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: ['‡∏à.', '‡∏≠.', '‡∏û.', '‡∏û‡∏§.', '‡∏®.', '‡∏™.', '‡∏≠‡∏≤.'],
      datasets: [{
        label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÄ‡∏Ñ‡∏™)',
        data,
        tension: .35,
        fill: true,
        borderColor: '#198754',
        backgroundColor: 'rgba(25,135,84,.12)',
        pointRadius: 3
      }]
    },
    options: {
      plugins: { legend: { display:false } },
      scales: {
        y: { beginAtZero:true, ticks:{ stepSize:10 } }
      }
    }
  });
}

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API/‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (pseudo)
/*
fetch('/api/patients')
  .then(r => r.json())
  .then(rows => { patients.splice(0, patients.length, ...rows); renderTable(); });
*/
